@page "/modal-test2"
@rendermode InteractiveServer

<style>
    .modal-test {
        background-color: #f8f9fa;
        padding: 20px;
        border-radius: 5px;
        margin: 20px;
        border-width: 1px;
    }
</style>

<div class="modal-test">
    <button class="btn btn-info" @onclick="() => Show()">Show modal</button>
    @if (!string.IsNullOrEmpty(Message))
    {
        <p>@Message</p>
    }

    <div class="testmodal-backdrop" style="display:@(IsVisible ? "block" : "none")">
        <div class="testmodal">
            <div class="testmodal-content">
                <div class="testmodal-header">
                    <button type="button" class="close" aria-label="Close" @onclick="Cancel">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h5 class="testmodal-title">Confirm delete</h5>
                </div>
                <div class="testmodal-body">
                    <p>Are you sure that you wan to delete this item?</p>
                </div>
                <div class="testmodal-footer">
                    <button type="button" class="btn btn-danger" @onclick="Cancel">Cancel</button>
                    <button type="button" class="btn btn-secondary" @onclick="Confirm">Confirm</button>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    public bool IsVisible { get; set; }
    public string Message { get; set; }

    private void Show()
    {
        IsVisible = true;
        StateHasChanged();
    }

    private void Hide()
    {
        IsVisible = false;
        StateHasChanged();
    }

    private void Cancel()
    {
        Message = "You canceled the operation";
        Hide();
    }

    private void Confirm()
    {
        Message = "You confirmed the operation";
        Hide();
    }
}