@page "/sites/{siteId:int}/webpages"
@using CodeMonkeys.CMS.Public.Components.Account.Shared
@using CodeMonkeys.CMS.Public.Shared.Services
@using Microsoft.AspNetCore.Identity
@inherits AuthenticationBaseComponent<WebPagesIndex>

@inject ISiteService SiteService
@inject IWebPageService WebPageService
@attribute [Authorize(Roles = "User, Admin")]

<PageTitle>@Site?.Name</PageTitle>

<UserViewer>
    <div class="backbutton">
        @* Gå tillbaka *@
        <a href="javascript:history.back()"><button>Gå tillbaka</button></a>
    </div>

    <div class="Content_Layout">
        <StatusMessage Message="@ErrorMessage" />

        <div>
            <h3>Overview for @Site?.Name</h3>
            <a class="btn btn-primary" href="/sites/@siteId/webpages/create">Create new page</a>
        </div>

        <div class="webpages-row mt-4">
            @foreach (var webPage in Pages ?? Enumerable.Empty<WebPage>())
            {
                <div class="webpages-col-md-4 webpages-mb-4">
                    <div class="webpages-card h-100">
                        <div class="webpages-card-header text-center font-weight-bold">
                            @webPage.Title
                        </div>
                        <div class="webpages-card-body">
                            <div class="webpages-empty-box bg-light" style="height: 150px;">
                                <!-- Additional content can go here -->
                            </div>
                        </div>
                        <div class="webpages-card-actions">
                            <a class="btn btn-primary webpages-btn webpages-btn-edit" href="/sites/@siteId/webpages/@webPage.WebPageId/edit">Edit</a>
                            <a class="btn btn-danger webpages-btn webpages-btn-delete" href="/sites/@siteId/webpages/@webPage.WebPageId/delete">Delete</a>
                        </div>
                        <div class="webpages-card-footer text-muted">
                            Last Modified: @webPage.LastModifiedDate.ToString("yyyy-MM-dd")
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <div>
        <a class="btn btn-primary" href="/sites/@siteId/webpages/create">Create new page</a>
    </div>
</UserViewer>

@code
{
    [Parameter]
    public int siteId { get; set; }

    public Site? Site { get; set; }

    private IEnumerable<WebPage> Pages = Enumerable.Empty<WebPage>();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        User? user = await GetCurrentUserAsync();

        if (user == null)
        {
            Logger.LogWarning("Authenticated User is not authenticated");
            return;
        }

        Site = await SiteService.GetUserSiteAsync(user.Id, siteId);
        if (Site == null)
        {
            Logger.LogWarning("Site not found");
            ErrorMessage = "There is no such site";
            return;
        }

        Pages = await WebPageService.GetSiteWebPagesAsync(siteId);
    }
}
