@page "/sites/{siteId:int}/webpages"
@using CodeMonkeys.CMS.Public.Components.Account.Shared
@using CodeMonkeys.CMS.Public.Components.Shared
@using CodeMonkeys.CMS.Public.Components.Shared.UI
@using CodeMonkeys.CMS.Public.Shared.Services
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Authorization
@inherits AuthenticationBaseComponent<WebPagesIndex>
@rendermode InteractiveServer
@attribute [Authorize(Roles = "User, Admin")]

<PageTitle>@Site?.Name</PageTitle>

<UserViewer>
    <div class="Page_Layout">
        <StatusMessage Message="@ErrorMessage" />

        <div>
            <h3>Overview for @Site?.Name</h3>
            <button type="button" class="btn btn-primary" @onclick="async() => await AddOrUpdatePageAsync()">Create new page</button>
        </div>

        @if (Site != null && Site.Pages.Any())
        {
            <h4>Page</h4>
            <table>
                <thead>
                    <tr>
                        <td>Page Title</td>
                        <td>Created by</td>
                        <td>Created Date</td>
                        <td>LastModified</td>
                        <td></td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (WebPage Page in Site.Pages)
                    {
                        <tr>
                            <td>@Page.Title</td>
                            <td>@Page.Author?.Email</td>
                            <td>@Page.CreatedDate.ToString("yyyy-MM-dd")</td>
                            <td>@Page.LastModifiedDate.ToString("yyyy-MM-dd")</td>
                            <td>
                                <button class="btn btn-primary" @onclick="async () => await AddOrUpdatePageAsync(Page.WebPageId)">Edit page title</button>
                                <button class="btn btn-secondary" @onclick="async () => await EditContentsAsync(Page.WebPageId)">Edit contents</button>
                                <button class="btn btn-danger" @onclick="async () => await DeletePageAsync(Page.WebPageId)">Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        <div>
            <button type="button" class="w-100 btn btn btn-primary" @onclick="async () => await AddOrUpdatePageAsync()">Create new Page!</button>
        </div>
    </div>

    <ConfirmationDialog @ref="Confirmation" Title="@ConfirmationTitle"
                        ConfirmationButtonText="@ConfirmationButtonText"
                        CancelButtonText="@CancelButtonText"
                        ConfirmationMessage="@ConfirmationMessage"
                        OnConfirm="OnConfirm"
                        OnCancel="OnCancel">
        @if (_pageModel == null)
        {
            <EditForm Model="Input" method="post" OnValidSubmit="async () => await HandleValidSubmit()" FormName="updatesite">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <StatusMessage Message="@ErrorMessage" />
                <div class="form-floating mb-3">
                    <InputText @bind-Value="Input.Name" class="form-control" autocomplete="name" aria-required="true" placeholder="Unique site name" />
                    <label for="name" class="form-label">Site Name</label>
                    <ValidationMessage For="() => Input.Name" class="text-danger" />
                </div>                
            </EditForm>
        }
        else
        {
            <EditForm Model="_pageModel" method="post" OnValidSubmit="async () => await HandleValidSubmit()" FormName="updatepage">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <StatusMessage Message="@ErrorMessage" />
                <div class="form-floating mb-3">
                    <InputText @bind-Value="_pageModel.Title" class="form-control" autocomplete="name" aria-required="true" placeholder="Unique site name" />
                    <label for="name" class="form-label">Site Name</label>
                    <ValidationMessage For="() => _pageModel.Title" class="text-danger" />
                 </div>
            </EditForm>
        }
    </ConfirmationDialog>
</UserViewer>