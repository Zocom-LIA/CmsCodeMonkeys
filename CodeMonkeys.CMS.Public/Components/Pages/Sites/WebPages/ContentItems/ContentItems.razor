@page "/sites/{siteId:int}/webpages/{webPageId:int}"
@using CodeMonkeys.CMS.Public.Components.Shared
@inherits AuthenticationBaseComponent<ContentItems>
@rendermode InteractiveServer

<!-- Layout -->
<div class="grid-container">
    <div class="vertical-container">
        <!-- Section Header -->
        @if (_contentHeader != null)
        {
            <div class="box edit-content-header" @onclick="() => OpenColorPicker(_contentHeader.SectionId)" style="background-color:@_contentHeader.Color">
                <div class="list-container" ondragover="event.preventDefault()" @ondrop="() => OnDrop(_contentHeader.SectionId)">
                    <h4>Header</h4>
                    <ul>
                        @foreach (var contentItem in _contentHeader?.ContentItems ?? [])
                        {
                            @RenderContentItem(contentItem)
                        }
                    </ul>
                </div>
            </div>
        }

        <!-- Section Body -->
        @if (_contentBody != null)
        {
            <div class="box edit-content-body" @onclick="() => OpenColorPicker(_contentBody.SectionId)" style="background-color:@_contentBody.Color">
                <div class="list-container" ondragover="event.preventDefault()" @ondrop="() => OnDrop(_contentBody.SectionId)">
                    <div>BODY</div>
                    <ul>
                        @foreach (var contentItem in _contentBody?.ContentItems ?? [])
                        {
                            @RenderContentItem(contentItem)
                        }
                    </ul>
                </div>
            </div>
        }

        <!-- Section Footer -->
        @if (_contentFooter != null)
        {
            <div class="box edit-content-footer" @onclick="() => OpenColorPicker(_contentFooter.SectionId)" style="background-color:@_contentFooter.Color">
                <div class="list-container" ondragover="event.preventDefault()" @ondrop="() => OnDrop(_contentFooter.SectionId)">
                    <div>Footer</div>
                    <ul>
                        @foreach (var contentItem in _contentFooter?.ContentItems ?? [])
                        {
                            @RenderContentItem(contentItem)
                        }
                    </ul>
                </div>
            </div>
        }
    </div>

    <!-- Toolbar Section (Section 3) -->
    <div class="box toolbar">
        <div>
            <input @bind="newContentItemText" placeholder="Skriv en uppgift" />
            <select @bind="selectedList">
                @foreach(var section in _sections)
                {
                    <option value="@(section)">@(section.Name)</option>
                }
            </select>
            <br />
              <br />
            <button @onclick="AddContentItem">Lägg till</button>
            <button @onclick="RemoveAllContentItemsAsync">Rensa Allt</button>
        </div>
    </div>
</div>

<!-- Color Picker -->
@if (showColorPicker)
{
    <div class="color-picker">
        <StatusMessage Message="@ErrorMessage" />
        <h4>Välj Bakgrundsfärg för @selectedBox</h4>
        <select @bind="selectedColor">
            @foreach (var color in colorOptions)
            {
                <option value="@color.Value">@color.Key</option>
            }
        </select>
        <button @onclick="SaveColorAsync">Spara</button>
    </div>
}

@code
{
    // Render content item for drag-and-drop
    RenderFragment RenderContentItem(ContentItem contentItem) => @<li draggable="true" 
        @ondragstart="() => OnDragStart(contentItem)" 
        @ondragend="() => OnDragEnd(contentItem)">

        @if(contentItem.IsEditing)
        
        {    <div style="text-align:@($"{contentItem.TextAlign} !important")">
            <span style="color:@contentItem.Color; font-size:@($"{contentItem.FontSize}px"); font-weight:@(contentItem.IsBold ? "bold" : "normal"); font-style:@(contentItem.IsItalic ? "italic" : "normal"); font-family:@contentItem.FontFamily;"
                @onclick="() => ToggleEdit(contentItem)">
                @contentItem.Text
                @if(contentItem.IsLinkEnabled && !string.IsNullOrEmpty(contentItem.LinkUrl) && !string.IsNullOrEmpty(contentItem.LinkDescription))
                {
                    <a href="https://@contentItem.LinkUrl" target="_blank" style="color:blue; text-decoration:underline;" @onclick:stopPropagation>-@contentItem.LinkDescription</a>
                }
                else if (!string.IsNullOrEmpty(contentItem.LinkDescription))
                {
                    <span>- @contentItem.LinkDescription</span>
                }
            </span>
        </div>
            <div class="TextEditor">
            <h4>Text Editor</h4>
            
            <label>Text:</label>
            <input @bind="contentItem.Text" />
            <br /> <br />
            <button style="mr-4" @onclick="() => SaveEdit(contentItem)">Spara</button>
            <button @onclick="() => RemoveContentItemAsync(contentItem)">Ta bort</button>
 <br />
  <br />
            <!-- Font, Color och Text Align Options -->
            <div>
                <label>Text Align:
                    <select @bind="contentItem.TextAlign">
                        <option value="left">Vänster</option>
                        <option value="center">Centrerad</option>
                        <option value="right">Höger</option>
                    </select>
                </label>
                <br />
                <label>Font Family:
                    <select @bind="contentItem.FontFamily">
                        <option value="">Välj en typsnitt</option>
                        @foreach(var font in fontFamilyOptions)
                        {
                            <option value="@font.Value">@font.Key</option>
                        }
                    </select>
                </label>
                <br />
                <label>Text Color:
                    <select @bind="contentItem.Color">
                        @foreach(var color in colorOptions)
                        {
                            <option value="@color.Value">@color.Key</option>
                        }
                    </select>
                </label>
                <br />
                <label>Text Size: @contentItem.FontSize
                <button @onclick="() => ChangeFontSize(contentItem, 1)">+</button>
                <button @onclick="() => ChangeFontSize(contentItem, -1)">-</button>
                </label>
            </div>

            <!-- Bold, Italic, och Link options -->
            <div>
                <label><input type="checkbox" @bind="contentItem.IsBold" /> Bold</label><br />
                <label><input type="checkbox" @bind="contentItem.IsItalic" /> Italic</label><br />
                <label><input type="checkbox" @bind="contentItem.IsLinkEnabled" /> Enable Link</label>
                
                @if(contentItem.IsLinkEnabled)
                {
                    <div>
                        <input type="text" placeholder="Enter link description" @bind="contentItem.LinkDescription" />
                        <input type="text" placeholder="Enter link URL (start with https://)" @bind="contentItem.LinkUrl" />
                    </div>
                }
            </div>
            </div>
        }
        else
        {
        <div style="text-align:@($"{contentItem.TextAlign} !important")">
            <span style="color:@contentItem.Color; font-size:@($"{contentItem.FontSize}px"); font-weight:@(contentItem.IsBold ? "bold" : "normal"); font-style:@(contentItem.IsItalic ? "italic" : "normal"); font-family:@contentItem.FontFamily;"
                @onclick="() => ToggleEdit(contentItem)">
                @contentItem.Text
                @if(contentItem.IsLinkEnabled && !string.IsNullOrEmpty(contentItem.LinkUrl) && !string.IsNullOrEmpty(contentItem.LinkDescription))
                {
                    <a href="https://@contentItem.LinkUrl" target="_blank" style="color:blue; text-decoration:underline;" @onclick:stopPropagation>-@contentItem.LinkDescription</a>
                }
                else if (!string.IsNullOrEmpty(contentItem.LinkDescription))
                {
                    <span>- @contentItem.LinkDescription</span>
                }
            </span>
             @if(contentItem.ShowEditButton)
            {   
                <button @onclick="() => StartEdit(contentItem)">Ändra</button>
            }
        </div>


           
        }
    </li>;
}
