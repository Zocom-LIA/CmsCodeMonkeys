@page "/sites/create"
@using System.ComponentModel.DataAnnotations
@using CodeMonkeys.CMS.Public.Shared.Services
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity

@inherits AuthenticationBaseComponent<SiteCreate>
@rendermode InteractiveServer

<UserViewer>
    <PageTitle>
        <h3>Create new Site</h3>
    </PageTitle>
    <PageBody>
        <EditForm Model="Input" method="post" OnValidSubmit="HandleValidSubmit" FormName="createsite">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <StatusMessage Message="@ErrorMessage" />

            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.Name" class="form-control" autocomplete="name" aria-required="true" placeholder="Unique site name" />
                <label for="name" class="form-label">Site Name</label>
                <ValidationMessage For="() => Input.Name" class="text-danger" />
            </div>
            <div>
                <button type="submit" class="w-100 btn btn-lg btn-primary">Create site</button>
            </div>

        </EditForm>
    </PageBody>
</UserViewer>

@code {
    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new InputModel();

    private string ErrorMessage { get; set; } = string.Empty;

    private async Task HandleValidSubmit()
    {
        if (string.IsNullOrEmpty(Input.Name))
        {
            ErrorMessage = "Name is required";
            return;
        }

        User? user = await GetCurrentUserAsync();

        if (user == null)
        {
            Logger.LogWarning("Authenticated User is not authenticated");
            return;
        }

        var site = new Site()
        {
            Name = Input.Name,
            CreatedDate = DateTime.Now,
            LastModifiedDate = DateTime.Now,
            CreatorId = user.Id
        };

        await SiteService.CreateSiteAsync(site);

        Navigation.NavigateTo($"sites/{site.SiteId}/webpages");
    }

    private sealed class InputModel
    {
        [Required]
        public string Name { get; set; } = string.Empty;
    }
}