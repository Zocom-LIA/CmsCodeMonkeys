@page "/content-items/{webPageId:int}"
@using CodeMonkeys.CMS.Public.Components.Shared
@inherits AuthenticationBaseComponent<ContentItems>
@rendermode InteractiveServer

<UserViewer>
    <!-- NY DESIGN -->
    <div class="grid-container">
        <div class="vertical-container">
            <div class="box box1" @onclick="() => OpenColorPicker(1)" style="background-color:@_section1.Color">
                <div class="list-container" ondragover="event.preventDefault()" @ondrop="() => OnDrop(2)">
                    <h4>Header</h4>
                    <ul>
                        @foreach (var contentItem in _section2.ContentItems)
                        {
                            @RenderContentItemItem(contentItem)
                        }
                    </ul>
                </div>
            </div>
            <div class="box box2" @onclick="() => OpenColorPicker(2)" style="background-color:@_section2.Color">
                <div class="list-container" ondragover="event.preventDefault()" @ondrop="() => OnDrop(3)">
                    <div>BODY</div>
                    <ul>
                        @foreach (var contentItem in _section3.ContentItems)
                        {
                            @RenderContentItemItem(contentItem)
                        }
                    </ul>
                </div>
            </div>
            <div class="box box4" @onclick="() => OpenColorPicker(4)" style="background-color:@_section4.Color">
                <div class="list-container" ondragover="event.preventDefault()" @ondrop="() => OnDrop(4)">
                    <div>Footer</div>
                    <ul>
                        @foreach (var contentItem in _section4.ContentItems)
                        {
                            @RenderContentItemItem(contentItem)
                        }
                    </ul>
                </div>
            </div>
        </div>
        <div class="box box3">
            <div>
                <input @bind="newContentItemText" placeholder="Skriv en uppgift" />
                <select @bind="selectedList">
                    <option value="1">Toolbar</option>
                    <option value="2">Header</option>
                    <option value="3">Body</option>
                    <option value="4">Footer</option>
                </select>
                <button @onclick="AddContentItem">Lägg till</button>
                <button @onclick="ClearAll">Rensa Allt</button>
            </div>
            <div class="list-container" ondragover="event.preventDefault()" @ondrop="() => OnDrop(1)">
                <h4>Toolbar</h4>
                <ul>
                    @foreach (var contentItem in _section1.ContentItems)
                    {
                        @RenderContentItemItem(contentItem)
                    }
                </ul>
            </div>
        </div>
    </div>

    @if (showColorPicker)
    {
        <div class="color-picker">
            <h4>Välj Bakgrundsfärg för @selectedBox</h4>
            <select @bind="selectedColor">
                @foreach (var color in colorOptions)
                {
                    <option value="@color.Value">@color.Key</option>
                }
            </select>
            <button @onclick="SaveColorAsync">Spara</button>
        </div>
    }
</UserViewer>

@code 
{
    RenderFragment RenderContentItemItem(ContentItem contentItem) => @<li draggable = "true" @ondragstart="() => OnDragStart(contentItem)">
    @if(contentItem.IsEditing)
        {
        < input @bind = "contentItem.Text" />
        < button @onclick = "() => SaveEdit(contentItem)" > Spara </ button >
        < button @onclick = "() => RemoveContentItem(contentItem)" > Ta bort </ button >
        < br />
        < br />

        < div >
            < label >
                Font Family:
                < select @bind = "contentItem.FontFamily" >
                    < option value = "" > Välj en typsnitt</ option >
                    @foreach(var font in fontFamilyOptions)
                {
                    < option value = "@font.Value" > @font.Key </ option >
                }
                </ select >
            </ label >
            < br />
            < label >
                Text Färg:
                < select @bind = "contentItem.Color" >
                    @foreach(var color in colorOptions)
                {
                    < option value = "@color.Value" > @color.Key </ option >
                }
                </ select >
            </ label >
        </ div >

        < div >
            < label >
                < input type = "checkbox" @bind = "contentItem.IsBold" />
                Bold
            </ label >
            < br />
            < label >
                < input type = "checkbox" @bind = "contentItem.IsItalic" />
                Italic
            </ label >
            < br />
            < label >
                < input type = "checkbox" @bind = "contentItem.IsLinkEnabled" />
                Enable Link
            </ label >
            @if(contentItem.IsLinkEnabled)
        {
            < div >
                < input type = "text" placeholder = "Enter link description" @bind = "contentItem.LinkDescription" />
                < input type = "text" placeholder = "Enter link URL (start with https://)" @bind = "contentItem.LinkUrl" />
            </ div >
        }
        </ div >
    }
    else
    {
        <span style = "color:@contentItem.Color; font-size:@($"{contentItem.FontSize}px"); font-weight:@(contentItem.IsBold ? "bold" : "normal"); font-style:@(contentItem.IsItalic ? "italic" : "normal"); font-family:@contentItem.FontFamily;"
              @onclick="() => ToggleEdit(contentItem)">
            @contentItem.Text
            @if(contentItem.IsLinkEnabled && !string.IsNullOrEmpty(contentItem.LinkUrl) && !string.IsNullOrEmpty(contentItem.LinkDescription))
        {
                < a href = "https://@contentItem.LinkUrl" target = "_blank" style = "color:blue; text-decoration:underline;" @onclick: stopPropagation >
                    -@contentItem.LinkDescription
                </ a >
            }
            else if (!string.IsNullOrEmpty(contentItem.LinkDescription))
            {
                <span>- @contentItem.LinkDescription</span> <!-- Display link description if it exists but is not clickable -->
            }
            </span>
        @if(contentItem.ShowEditButton)
        {
            < button @onclick = "() => StartEdit(contentItem)" > Ändra </ button >
            < button @onclick = "() => ToggleEdit(contentItem)" > Save </ button >
            < button @onclick = "() => ChangeFontSize(contentItem, 1)" >↑</ button >
            < button @onclick = "() => ChangeFontSize(contentItem, -1)" >↓</ button >
        }
    }
    </li>;
}
}}