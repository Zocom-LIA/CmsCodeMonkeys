@implements IDisposable
@rendermode InteractiveServer

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Components.Authorization


<header>
    <div class="header-content">
        <div class="nav-item px-3">
        <h1 class="header-title">CODE MONKEYS</h1>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="">
           Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="admin">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Admin
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="user">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> user
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="pagevisits">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Page Visits
            </NavLink>
        </div>
       
        <nav class="navbar-nav">
            <ul class="navbar-nav">
                <AuthorizeView>
                    <Authorized>
                        <form action="Account/Logout" method="post" id="logout-form" class="d-inline">
                            <AntiforgeryToken />
                            <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                            <button type="submit" class="nav-link button-logout">
                                <span class="bi bi-box-arrow-right link-hover" aria-hidden="true">Logout</span>
                            </button>
                        </form>
                    </Authorized>
                    <NotAuthorized>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="Account/Register">
                                Register
                            </NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="Account/Login">
                                Login
                            </NavLink>
                        </li>
                        </NotAuthorized>
                </AuthorizeView>
            </ul>
        </nav>
    </div>
</header>



@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
