@implements IDisposable
@rendermode InteractiveServer

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Components.Authorization

<style>

    header {
        background-color: #343a40; /* Dark gray */
        color: white;
        padding: 5px 20px;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        z-index: 1000;
        display: flex;
        align-items: center;
        justify-content: space-between;
        height: 90px;
    }

    .header-content {
        display: flex;
        align-items: center;
        justify-content: space-between;
        width: 100%;
        max-width: 1600px;
        margin: 0 auto;
    }

    .header-title {
        margin: 0;
        font-size: 1.5rem;
        font-weight: bold;
    }

    .navbar-nav {
        list-style-type: none; /* Removes default list styling */
        margin: 0;
        padding: 0;
        display: flex; /* Aligns items horizontally */
    }

        .navbar-nav .nav-item {
            margin-left: 800px; /* Space between items */
        }

        .navbar-nav .nav-link {
            color: white;
            text-decoration: none; /* Removes underline from links */
            font-weight: bold;
        }

            .navbar-nav .nav-link:hover {
                color: #ffc107; /* Hover color */
            }

</style>


<header>
    <div class="header-content">
        <div class="nav-item px-3">
        <h1 class="header-title">CODE MONKEYS</h1>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="">
           Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="pagevisits">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Page Visits
            </NavLink>
        </div>
       
        <nav class="navbar-nav">
            <ul class="navbar-nav">
                <AuthorizeView>
                    <Authorized>
                        <form action="Account/Logout" method="post" id="logout-form" class="d-inline">
                            <AntiforgeryToken />
                            <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                            <button type="submit" class="nav-link button-logout">
                                <span class="bi bi-box-arrow-right link-hover" aria-hidden="true">Logout</span>
                            </button>
                        </form>
                    </Authorized>
                    <NotAuthorized>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="Account/Register">
                                Register
                            </NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="Account/Login">
                                Login
                            </NavLink>
                        </li>
                        </NotAuthorized>
                </AuthorizeView>
            </ul>
        </nav>
    </div>
</header>



@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
