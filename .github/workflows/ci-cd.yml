name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Only on push to main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Check for USE_CICD in commit message
        id: check_commit
        run: |
          if [[ "${{ github.event.head_commit.message }}" != *"[USE_CICD]"* ]]; then
            echo "Commit message does not contain USE_CICD. Aborting."
            exit 1
          fi

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      - name: Restore NuGet packages
        run: dotnet restore CodeMonkeys.CMS.Public.sln

      - name: Build solution
        run: dotnet build CodeMonkeys.CMS.Public.sln --configuration Release --no-restore

      - name: Run tests
        run: dotnet test CodeMonkeys.CMS.Public.sln --no-restore --verbosity normal --logger "trx;LogFileName=test_results.trx"

      # Add test results as an artifact
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: "**/test_results.trx"

      - name: Publish .NET application
        run: dotnet publish CodeMonkeys.CMS.Public.sln --configuration Release --output ./publish

      # Verify that wwwroot content (including images) is present
      - name: Verify wwwroot content
        run: |
          ls -R ./publish/wwwroot || echo "wwwroot folder not found"

      # Upload build artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: ./publish

      - name: Set environment variable for connection string
        run: echo "DB_CONNECTION_STRING=${{ secrets.DB_CONNECTION_STRING }}" >> $GITHUB_ENV

      - name: Install dotnet-ef tool
        run: dotnet tool install --global dotnet-ef

      - name: Set environment variable for dotnet tools path
        run: echo "PATH=$HOME/.dotnet/tools:$PATH" >> $GITHUB_ENV

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.AZURE_APP_SERVICE_NAME }}
          slot-name: "production"
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ./publish
        env:
          DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING }}

      - name: Deploy database migrations
        run: |
          cd CodeMonkeys.CMS.Public.Shared
          # List the files to ensure deps.json exists
          ls -R bin/Release/net8.0/ || echo "Directory not found"
          dotnet ef database update --no-build --context ApplicationDbContext --configuration Release
        env:
          ConnectionStrings__DefaultConnection: ${{ secrets.DB_CONNECTION_STRING }}
